worker_processes 2;
pid /run/nginx.pid;
daemon off;

error_log /dev/stdout info;

events {
    worker_connections 768;
}

http {
    resolver $DNS_RESOLVER;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_names_hash_bucket_size 64;

    include /usr/local/nginx/conf/mime.types;
    default_type application/octet-stream;

    # Custom log format for logstash
    log_format logstash '$real_ip - [$time_local] "$host" '
                        '"$request" $status $bytes_sent '
                        '"$http_referer" "$http_user_agent"';

    gzip on;
    gzip_vary on;
    gzip_types application/vnd.apple.mpegurl m3u8;

    proxy_cache_lock on;
    proxy_cache_lock_timeout 60s;
    proxy_cache_path /data/cache levels=1:2 keys_zone=s3cache:10m max_size=30g;

    server {
        listen 8080;

        access_log /dev/stdout;


        # Request format:
        # /{type(video|audio)}/{userId}/{token}/{expires}/{streamId}{streamAppendix}.{ext}
        # See api.selecta.live for how the token is encoded
        # Validates the token using secure_link
        location ~ /(?<type>(video|audio))/(?<userId>[a-zA-Z0-9_\-]*)/(?<token>[a-zA-Z0-9_\-]*)/(?<expires>[0-9]*)/(?<streamId>[^_]*)(?<streamAppendix>.*)\.(?<ext>ts|m3u8)$ {

            # Limit request to GET and OPTIONS
            limit_except GET OPTIONS { deny all; }

            # Set real_ip as http_x_forwarded_for, this will be set on staging and production
            set $real_ip $http_x_forwarded_for;

            # In development http_x_forwarded_for will not be set, fallback to remote_addr
            if ($http_x_forwarded_for = "") {
                set $real_ip $remote_addr;
            }

            # Handle secure link
            secure_link $token,$expires;
            secure_link_md5 "$type $userId $streamId $real_ip $secure_link_expires $SECURE_LINK_SECRET";
            if ($secure_link = "") { return 403; }
            if ($secure_link = "0") { return 410; }

            # Send logs to Logstash
            access_log syslog:server=${LOG_STASH_URL},tag=nginx_access logstash;

            # allow CORS preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Cache-Control no-cache;
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            proxy_pass http://127.0.0.1:8080/hls/$streamId/$type/$streamId$streamAppendix.$ext;

            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
        }


        # Proxy m3u8 files from storage here
        # Disallow cache
        location ~* \.m3u8$ {
            allow 127.0.0.1;
            deny all;

            rewrite /(.*) /$1 break;
            proxy_pass $MINIO_ENDPOINT/$1;

            aws_access_key $MINIO_ACCESS_KEY;
            aws_secret_key $MINIO_SECRET_KEY;
            s3_bucket $MINIO_BUCKET;

            proxy_set_header Authorization $s3_auth_token;
            proxy_set_header x-amz-date $aws_date;

            proxy_cache off;
        }


        # Proxy ts files from storage here
        # Caches files
        location ~* \.ts$ {
            allow 127.0.0.1;
            deny all;

            rewrite /(.*) /$1 break;
            proxy_pass $MINIO_ENDPOINT/$1;

            aws_access_key $MINIO_ACCESS_KEY;
            aws_secret_key $MINIO_SECRET_KEY;
            s3_bucket $MINIO_BUCKET;

            proxy_set_header Authorization $s3_auth_token;
            proxy_set_header x-amz-date $aws_date;

            proxy_cache        s3cache;
            proxy_cache_valid  6h;
        }


        # For development only
        # Get client IP for generating stream URL
        location /client-ip {
            default_type text/plain;

            set $real_ip $http_x_forwarded_for;

            # In development http_x_forwarded_for will not be set, fallback to remote_addr
            if ($http_x_forwarded_for = "") {
                set $real_ip $remote_addr;
            }

            return 200 "$real_ip";
        }
    }
}